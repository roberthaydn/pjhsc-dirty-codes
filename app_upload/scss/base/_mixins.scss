/* Mixins */
//Border-radius
@mixin border-radius($radius) {
	-moz-border-radius:$radius;
 -webkit-border-radius:$radius;
 	 -ms-border-radius:$radius;
	  -o-border-radius:$radius;
	  	 border-radius:$radius;
}

//Border(solid)
@mixin add-border($size, $color, $position) {
	@if $position == 'all' {
		border:$size solid $color;
	} @else if $position == 'top' {
		border-top:$size solid $color;
	} @else if $position == 'bottom' {
		border-bottom:$size solid $color;
	} @else if $position == 'right' {
		border-right:$size solid $color;
	} @else if $position == 'left' {
		border-left:$size solid $color;
	} @else if $position == 'top-bottom' {
		border-top:$size solid $color;
		border-bottom:$size solid $color;
	} @else if $position == 'right-left' {
		border-right:$size solid $color;
		border-left:$size solid $color;
	}
}

//Border(solid)
@mixin add-margin($set, $position) {
	@if $position == 'top' {
		margin-top:$set;
	} @else if $position == 'left' {
		margin-left:$set;
	} @else if $position == 'bottom' {
		margin-bottom:$set;
	} @else if $position == 'right' {
		margin-right:$set;
	} @else if $position == 'all' {
		margin:$set;
	}
}

//Border(solid)
@mixin add-padding($set, $position) {
	@if $position == 'top' {
		padding-top:$set;
	} @else if $position == 'left' {
		padding-left:$set;
	} @else if $position == 'bottom' {
		padding-bottom:$set;
	} @else if $position == 'right' {
		padding-right:$set;
	} @else if $position == 'all' {
		padding:$set;
	}
}

//Background-color
@mixin add-background($color) {
	background:$color;
	color:#fff;
}
